

type Query{
    messages: [Message!]!
    user:[User!]
    getUser(id:ID!):result!
    getPost(id:ID!):Post!
    posts(limit:Int!,offset:Int!,nature:String!):[Post!]!
    comments:[Comment!]!
    getComment(id:ID):Comment!
    books:[Book!]
    getBook(id:ID!):Book
    author(id:ID!):Author
    chatHistory:[Text!]!
}

type Mutation{
    postMessage(content:String!,author:String!):Message!
    postBook(title:String!,genre:String!):Book!
    postUser(name:String!,email:String!):User!
    deleteComment(id:ID!):ID!
    postPost(title:String!,content:String!,authorId:String!):Post!
    postComment(content:String!,authorId:ID!,postId:ID!):Comment!
    postChat(content:String!,senderId:String!):Text!
    login(username:String,password:String!):Token!
    logout:Sender!
    signup(username:String!,password:String!,role:String):UserType!
}
type Token{
    token: String!
    status:Int!
}
type Subscription{
    messagePosted:Message!
    commentPosted:Comment!
    chatPosted:Current!
}